# Generated by Django 3.0.7 on 2022-12-23 13:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('mainapp', '0003_auto_20200605_2307'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.CharField(max_length=20, verbose_name='Latitude for the location')),
                ('longitude', models.CharField(max_length=20, verbose_name='Longitude for the location')),
                ('place_name', models.CharField(max_length=200, null=True, verbose_name='Place name (if available)')),
                ('address', models.CharField(max_length=200, null=True, verbose_name='Location address (if available)')),
            ],
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_downloaded', models.BooleanField(verbose_name='media downloaded flag')),
                ('media_type', models.CharField(max_length=50, null=True, verbose_name='media_type as in TG log format')),
                ('mime_type', models.CharField(max_length=50, null=True, verbose_name='mime_type as in TG log format')),
                ('thumbnail', models.CharField(blank=True, max_length=100, verbose_name='path to a thumbnail bound to this message')),
                ('width', models.IntegerField(null=True, verbose_name='width of a media file')),
                ('height', models.IntegerField(null=True, verbose_name='height of a media file')),
                ('duration_seconds', models.IntegerField(null=True, verbose_name='duration of a media file')),
                ('file_path', models.CharField(blank=True, max_length=100, verbose_name='path to mediafile bound to this message')),
                ('sticker_emoji', models.CharField(max_length=2, null=True, verbose_name='Emoji for a sticker')),
                ('performer', models.CharField(max_length=200, null=True, verbose_name='Performer tag')),
                ('title', models.CharField(max_length=200, null=True, verbose_name='composition title')),
            ],
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='Poll question')),
                ('closed', models.BooleanField(default=False, verbose_name='is a poll closed')),
                ('total_voters', models.IntegerField(verbose_name='total votes for this poll')),
            ],
        ),
        migrations.RenameField(
            model_name='message',
            old_name='time_stamp',
            new_name='date',
        ),
        migrations.RenameField(
            model_name='message',
            old_name='media',
            new_name='media_string',
        ),
        migrations.RenameField(
            model_name='message',
            old_name='fwd_from',
            new_name='forwarded_from',
        ),
        migrations.RenameField(
            model_name='message',
            old_name='username',
            new_name='from_name',
        ),
        migrations.RenameField(
            model_name='message',
            old_name='reply_to',
            new_name='reply_to_message_id',
        ),
        migrations.RenameField(
            model_name='message',
            old_name='inline',
            new_name='via_bot',
        ),
        migrations.RemoveField(
            model_name='message',
            name='fwd',
        ),
        migrations.AddField(
            model_name='message',
            name='edited',
            field=models.DateTimeField(null=True, verbose_name='Message edit time'),
        ),
        migrations.AddField(
            model_name='message',
            name='from_id',
            field=models.BigIntegerField(null=True, verbose_name='TG user ID'),
        ),
        migrations.AlterField(
            model_name='message',
            name='msg_type',
            field=models.PositiveIntegerField(choices=[(0, 'Text'), (1, 'Animation'), (2, 'Sticker'), (3, 'Photo'), (4, 'Image file'), (5, 'Video'), (6, 'Poll'), (7, 'Location'), (8, 'Animated sticker'), (9, 'Voice message'), (10, 'Video message'), (11, 'Audio file'), (100, 'Other file')], default=0, verbose_name='message type (related to media type it was carrying'),
        ),
        migrations.CreateModel(
            name='PollAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chosen', models.BooleanField(verbose_name='log owner vote for the option', default=False)),
                ('text', models.CharField(max_length=255, verbose_name='option description')),
                ('voters', models.IntegerField(verbose_name='total votes for this option')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='mainapp.Poll')),
            ],
        ),
        migrations.AddField(
            model_name='message',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.Location'),
        ),
        migrations.AddField(
            model_name='message',
            name='poll',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.Poll', verbose_name='A telegram poll results'),
        ),
        migrations.AddField(
            model_name='message',
            name='media',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.MediaFile'),
        ),
    ]
