# Generated by Django 4.2.5 on 2023-09-29 11:10

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('mainapp', '0007_auto_20221230_2053'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='message',
            options={'ordering': ['pk']},
        ),
        migrations.AlterField(
            model_name='location',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='mediafile',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='message',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='poll',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='pollanswer',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.CreateModel(
            name='MessageVector',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('vector', django.contrib.postgres.search.SearchVectorField(null=True, verbose_name='message vectors')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vector', to='mainapp.message')),
            ],
            options={
                'indexes': [django.contrib.postgres.indexes.GinIndex(django.contrib.postgres.search.SearchVector('vector', config='russian'), name='idx_gin_document')],
            },
        ),
    ]
